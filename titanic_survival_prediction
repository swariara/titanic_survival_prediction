{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOS7K6yf+kAJKBqkGZrsPQc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#import required libraries\n","import warnings\n","\n","import pandas as pd\n","import numpy as np\n","\n","#for visualization\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","#for building model\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.svm import SVC\n","from sklearn.pipeline import Pipeline, make_pipeline\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, confusion_matrix,f1_score, classification_report\n","from sklearn.preprocessing import MinMaxScaler, LabelEncoder, OneHotEncoder, OrdinalEncoder\n","\n","\n","#for tuning the models\n","from sklearn.model_selection import GridSearchCV, cross_val_score, train_test_split\n","from sklearn.model_selection import RandomizedSearchCV\n","\n","# To impute missing values\n","from sklearn.impute import SimpleImputer\n","\n","warnings.simplefilter(action=\"ignore\", category=FutureWarning)"],"metadata":{"id":"9xtqdk-e3ScI","executionInfo":{"status":"ok","timestamp":1678103905751,"user_tz":-180,"elapsed":1500,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","\n","drive.mount('/content/gdrive/', force_remount=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2GgAF3ay4_jF","executionInfo":{"status":"ok","timestamp":1678103911696,"user_tz":-180,"elapsed":5952,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"7c63b757-9f25-4a20-f6ec-32f62635f39a"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive/\n"]}]},{"cell_type":"code","source":["#load datasets\n","\n","train_df = pd.read_csv('/content/gdrive/MyDrive/datasets/titanic_train.csv')\n","test_df = pd.read_csv('/content/gdrive/MyDrive/datasets/titanic_test.csv')"],"metadata":{"id":"FiJhBu685j4I","executionInfo":{"status":"ok","timestamp":1678103911698,"user_tz":-180,"elapsed":53,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["print(train_df.shape)\n","train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"pBzWx7786uRl","executionInfo":{"status":"ok","timestamp":1678103911700,"user_tz":-180,"elapsed":52,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"1e66cdae-4ef4-43f2-d24b-3a43ea0127ce"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["(891, 12)\n"]},{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-184a4fde-f248-4b5c-88ba-bf275ea9f2c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-184a4fde-f248-4b5c-88ba-bf275ea9f2c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-184a4fde-f248-4b5c-88ba-bf275ea9f2c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-184a4fde-f248-4b5c-88ba-bf275ea9f2c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["- Ticket has combination of string and int values\n","\n","- Cabin has some missing values\n","\n","- Name column has some errors"],"metadata":{"id":"cDjgbHnO9pEW"}},{"cell_type":"code","source":["print(test_df.shape)\n","test_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"W0zGUnZy7FHo","executionInfo":{"status":"ok","timestamp":1678103911702,"user_tz":-180,"elapsed":42,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"e09dcdf6-e73e-44f7-bf8c-e2d6ac5ad8d1"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["(418, 11)\n"]},{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Pclass                                          Name     Sex  \\\n","0          892       3                              Kelly, Mr. James    male   \n","1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n","2          894       2                     Myles, Mr. Thomas Francis    male   \n","3          895       3                              Wirz, Mr. Albert    male   \n","4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n","\n","    Age  SibSp  Parch   Ticket     Fare Cabin Embarked  \n","0  34.5      0      0   330911   7.8292   NaN        Q  \n","1  47.0      1      0   363272   7.0000   NaN        S  \n","2  62.0      0      0   240276   9.6875   NaN        Q  \n","3  27.0      0      0   315154   8.6625   NaN        S  \n","4  22.0      1      1  3101298  12.2875   NaN        S  "],"text/html":["\n","  <div id=\"df-1bd85650-c86c-46cb-b2cd-3aa3f9f27d20\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1bd85650-c86c-46cb-b2cd-3aa3f9f27d20')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1bd85650-c86c-46cb-b2cd-3aa3f9f27d20 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1bd85650-c86c-46cb-b2cd-3aa3f9f27d20');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["train_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ZQvo3Yv7k-y","executionInfo":{"status":"ok","timestamp":1678103912596,"user_tz":-180,"elapsed":927,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"a679ea9b-e85d-4bc2-e943-93f088be7778"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"markdown","source":["- There are 891 total entries out of 2224 number of passengers in the ship.\n","- Age and Cabin have some missing values.\n","- There are 7 numerical columns, and 5 catergorical columns."],"metadata":{"id":"aoQwJymH-pvN"}},{"cell_type":"code","source":["test_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"44maL2sB7uUl","executionInfo":{"status":"ok","timestamp":1678103912598,"user_tz":-180,"elapsed":922,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"f161445c-171f-4850-8d3f-89778d687bbb"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  418 non-null    int64  \n"," 1   Pclass       418 non-null    int64  \n"," 2   Name         418 non-null    object \n"," 3   Sex          418 non-null    object \n"," 4   Age          332 non-null    float64\n"," 5   SibSp        418 non-null    int64  \n"," 6   Parch        418 non-null    int64  \n"," 7   Ticket       418 non-null    object \n"," 8   Fare         417 non-null    float64\n"," 9   Cabin        91 non-null     object \n"," 10  Embarked     418 non-null    object \n","dtypes: float64(2), int64(4), object(5)\n","memory usage: 36.0+ KB\n"]}]},{"cell_type":"markdown","source":["- Age and cabin have some missing values."],"metadata":{"id":"_Edu8Saa_NKC"}},{"cell_type":"code","source":["train_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"RTaHWKU0AaNt","executionInfo":{"status":"ok","timestamp":1678103912600,"user_tz":-180,"elapsed":108,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"a24fa9ea-46a7-4356-c02a-4459dee86546"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  714.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n","std     257.353842    0.486592    0.836071   14.526497    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n","50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n","75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "],"text/html":["\n","  <div id=\"df-8146b919-1743-41e8-849a-e7773a6318d8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8146b919-1743-41e8-849a-e7773a6318d8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8146b919-1743-41e8-849a-e7773a6318d8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8146b919-1743-41e8-849a-e7773a6318d8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["- Around 38% samples survived representative of the actual survival rate at 32%.\n","\n","- Most passengers (> 75%) did not travel with parents or children.\n","\n","- Nearly 30% of the passengers had siblings and/or spouse aboard.\n","\n","- Fares varied significantly with few passengers (<1%) paying as high as $512.\n","\n","- Few elderly passengers (<1%) within age range 65-80."],"metadata":{"id":"L1F_75KqAjy6"}},{"cell_type":"code","source":["train_df.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hob-ibbwagzt","executionInfo":{"status":"ok","timestamp":1678103912601,"user_tz":-180,"elapsed":106,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"d8518678-2a83-45b8-dcef-fe276a0aaafa"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId    891\n","Survived         2\n","Pclass           3\n","Name           891\n","Sex              2\n","Age             88\n","SibSp            7\n","Parch            7\n","Ticket         681\n","Fare           248\n","Cabin          147\n","Embarked         3\n","dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["train_df.describe(include=['O'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"2J3eeZZ-DRNv","executionInfo":{"status":"ok","timestamp":1678103912604,"user_tz":-180,"elapsed":99,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"10df001a-8def-477f-da6a-ca98c128e4dc"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           Name   Sex  Ticket    Cabin Embarked\n","count                       891   891     891      204      889\n","unique                      891     2     681      147        3\n","top     Braund, Mr. Owen Harris  male  347082  B96 B98        S\n","freq                          1   577       7        4      644"],"text/html":["\n","  <div id=\"df-3151ae08-334b-483e-8cb7-936400aa4dcf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Ticket</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>204</td>\n","      <td>889</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>681</td>\n","      <td>147</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>347082</td>\n","      <td>B96 B98</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>1</td>\n","      <td>577</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>644</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3151ae08-334b-483e-8cb7-936400aa4dcf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3151ae08-334b-483e-8cb7-936400aa4dcf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3151ae08-334b-483e-8cb7-936400aa4dcf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["- Male passengers were more than the female. (75>)\n","- Many passengers embarked on S "],"metadata":{"id":"wWjof4r2WFAm"}},{"cell_type":"code","source":["train_df[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"o9Gxiv9QWmar","executionInfo":{"status":"ok","timestamp":1678103912605,"user_tz":-180,"elapsed":97,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"36757919-4b61-4906-db72-229fb85f25fd"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Sex  Survived\n","0  female  0.742038\n","1    male  0.188908"],"text/html":["\n","  <div id=\"df-dddb5500-4d0d-4c73-b7d6-895dd8452fb5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>female</td>\n","      <td>0.742038</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>male</td>\n","      <td>0.188908</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dddb5500-4d0d-4c73-b7d6-895dd8452fb5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dddb5500-4d0d-4c73-b7d6-895dd8452fb5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dddb5500-4d0d-4c73-b7d6-895dd8452fb5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["train_df[[\"Pclass\", \"Survived\"]].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"3IcMUMS2Xjkz","executionInfo":{"status":"ok","timestamp":1678103912606,"user_tz":-180,"elapsed":95,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"7c633bfd-db72-443c-ae3e-1f8a1da2e44b"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Pclass  Survived\n","0       1  0.629630\n","1       2  0.472826\n","2       3  0.242363"],"text/html":["\n","  <div id=\"df-275c889c-74fb-4ca2-a59d-96ce47ad1a93\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.629630</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.472826</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.242363</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-275c889c-74fb-4ca2-a59d-96ce47ad1a93')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-275c889c-74fb-4ca2-a59d-96ce47ad1a93 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-275c889c-74fb-4ca2-a59d-96ce47ad1a93');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["train_df[[\"SibSp\", \"Survived\"]].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"FK6sr5R7XvGQ","executionInfo":{"status":"ok","timestamp":1678103912608,"user_tz":-180,"elapsed":93,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"c6aee0ba-cd7a-4e91-a51d-d7f234a7e580"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SibSp  Survived\n","1      1  0.535885\n","2      2  0.464286\n","0      0  0.345395\n","3      3  0.250000\n","4      4  0.166667\n","5      5  0.000000\n","6      8  0.000000"],"text/html":["\n","  <div id=\"df-7ac6db1f-32b5-40ff-a28f-aad430567387\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SibSp</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.535885</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.464286</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.345395</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.250000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.166667</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ac6db1f-32b5-40ff-a28f-aad430567387')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7ac6db1f-32b5-40ff-a28f-aad430567387 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7ac6db1f-32b5-40ff-a28f-aad430567387');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["train_df[[\"Parch\", \"Survived\"]].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"B1ZP_9w_YE4K","executionInfo":{"status":"ok","timestamp":1678103912609,"user_tz":-180,"elapsed":91,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"944e3ef3-9324-49ba-be48-a5f1fe39d0cc"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Parch  Survived\n","3      3  0.600000\n","1      1  0.550847\n","2      2  0.500000\n","0      0  0.343658\n","5      5  0.200000\n","4      4  0.000000\n","6      6  0.000000"],"text/html":["\n","  <div id=\"df-6bc7afd7-af29-4e15-85a2-cf5769824b7c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Parch</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.550847</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.343658</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bc7afd7-af29-4e15-85a2-cf5769824b7c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6bc7afd7-af29-4e15-85a2-cf5769824b7c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6bc7afd7-af29-4e15-85a2-cf5769824b7c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["train_df[[\"Age\", \"Survived\"]].groupby(['Age'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"IwgCvtM1ZcDC","executionInfo":{"status":"ok","timestamp":1678103912611,"user_tz":-180,"elapsed":90,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"8a0995a1-6b04-427e-eed8-f668f6fa68e7"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Age  Survived\n","0    0.42       1.0\n","9    5.00       1.0\n","79  63.00       1.0\n","68  53.00       1.0\n","1    0.67       1.0\n","..    ...       ...\n","37  28.50       0.0\n","49  36.50       0.0\n","46  34.50       0.0\n","26  20.50       0.0\n","30  23.50       0.0\n","\n","[88 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-20cbec0b-2f8c-4d9b-8b8d-3ed1c8133719\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.42</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>5.00</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>63.00</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>53.00</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.67</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>28.50</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>36.50</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>34.50</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>20.50</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>23.50</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>88 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20cbec0b-2f8c-4d9b-8b8d-3ed1c8133719')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-20cbec0b-2f8c-4d9b-8b8d-3ed1c8133719 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-20cbec0b-2f8c-4d9b-8b8d-3ed1c8133719');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["train_df[[\"Pclass\", \"Survived\"]].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"P_oZoINxZfx6","executionInfo":{"status":"ok","timestamp":1678103912612,"user_tz":-180,"elapsed":87,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"366f6d37-7dc2-4357-d2f2-90b528c1be30"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Pclass  Survived\n","0       1  0.629630\n","1       2  0.472826\n","2       3  0.242363"],"text/html":["\n","  <div id=\"df-f1e24f8c-2854-4890-bb6f-578659df1070\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.629630</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.472826</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.242363</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1e24f8c-2854-4890-bb6f-578659df1070')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f1e24f8c-2854-4890-bb6f-578659df1070 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f1e24f8c-2854-4890-bb6f-578659df1070');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#drop leaky columns\n","train_df = train_df.drop([\"Name\", \"Ticket\", \"Fare\", \"Cabin\"], axis = 1).set_index(\"PassengerId\")\n","train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"flBMyLzZZ5gr","executionInfo":{"status":"ok","timestamp":1678103912614,"user_tz":-180,"elapsed":84,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"ed842427-f235-4d21-c7b0-74aec4f22b3d"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Survived  Pclass     Sex   Age  SibSp  Parch Embarked\n","PassengerId                                                       \n","1                   0       3    male  22.0      1      0        S\n","2                   1       1  female  38.0      1      0        C\n","3                   1       3  female  26.0      0      0        S\n","4                   1       1  female  35.0      1      0        S\n","5                   0       3    male  35.0      0      0        S"],"text/html":["\n","  <div id=\"df-b138c524-806c-4bd5-9c99-c3879fbf58c7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Embarked</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b138c524-806c-4bd5-9c99-c3879fbf58c7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b138c524-806c-4bd5-9c99-c3879fbf58c7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b138c524-806c-4bd5-9c99-c3879fbf58c7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["test_df = test_df.drop([\"Name\"], axis = 1).set_index(\"PassengerId\")\n","test_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"17Ho10RZPWCx","executionInfo":{"status":"ok","timestamp":1678103913229,"user_tz":-180,"elapsed":691,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"0823c2e7-453c-446e-d04e-8b912324be6e"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Pclass     Sex   Age  SibSp  Parch   Ticket     Fare Cabin  \\\n","PassengerId                                                               \n","892               3    male  34.5      0      0   330911   7.8292   NaN   \n","893               3  female  47.0      1      0   363272   7.0000   NaN   \n","894               2    male  62.0      0      0   240276   9.6875   NaN   \n","895               3    male  27.0      0      0   315154   8.6625   NaN   \n","896               3  female  22.0      1      1  3101298  12.2875   NaN   \n","\n","            Embarked  \n","PassengerId           \n","892                Q  \n","893                S  \n","894                Q  \n","895                S  \n","896                S  "],"text/html":["\n","  <div id=\"df-f8a32174-a083-4236-bc16-41bdb5a3727e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>892</th>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>896</th>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8a32174-a083-4236-bc16-41bdb5a3727e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f8a32174-a083-4236-bc16-41bdb5a3727e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f8a32174-a083-4236-bc16-41bdb5a3727e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# converting Sex feature to a new feature called Gender where female=1 and male=0.\n","\n","titanic = [train_df,test_df]\n","\n","\n","for dataset in titanic:\n","    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n","\n","train_df.head()\n","     "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"GOw0R2jGlNiB","executionInfo":{"status":"ok","timestamp":1678103913231,"user_tz":-180,"elapsed":101,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"d8cb85fd-43fe-4997-b8e4-52b5ba80e5f3"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Survived  Pclass  Sex   Age  SibSp  Parch Embarked\n","PassengerId                                                    \n","1                   0       3    0  22.0      1      0        S\n","2                   1       1    1  38.0      1      0        C\n","3                   1       3    1  26.0      0      0        S\n","4                   1       1    1  35.0      1      0        S\n","5                   0       3    0  35.0      0      0        S"],"text/html":["\n","  <div id=\"df-d82d21ae-5671-498c-83e8-001176ee7cbe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Embarked</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d82d21ae-5671-498c-83e8-001176ee7cbe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d82d21ae-5671-498c-83e8-001176ee7cbe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d82d21ae-5671-498c-83e8-001176ee7cbe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["\n","freq_port = train_df.Embarked.dropna().mode()[0]\n","freq_port\n","     "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"chVpn0Mwoo8g","executionInfo":{"status":"ok","timestamp":1678103913233,"user_tz":-180,"elapsed":99,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"71f7ef2d-26e4-4f5c-98d6-3b7ce8a93c67"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'S'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["titanic = [train_df,test_df]\n","\n","for dataset in titanic:\n","    dataset['Embarked'] = dataset['Embarked'].fillna(freq_port)\n","    \n","train_df[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"Ij8h2Bo0owP5","executionInfo":{"status":"ok","timestamp":1678103913236,"user_tz":-180,"elapsed":97,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"4684d195-6563-4996-b373-b864dd2d368c"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Embarked  Survived\n","0        C  0.553571\n","1        Q  0.389610\n","2        S  0.339009"],"text/html":["\n","  <div id=\"df-a8d9fbdd-c5ff-4f07-b275-8f6997dea6da\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Embarked</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>C</td>\n","      <td>0.553571</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Q</td>\n","      <td>0.389610</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>S</td>\n","      <td>0.339009</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8d9fbdd-c5ff-4f07-b275-8f6997dea6da')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a8d9fbdd-c5ff-4f07-b275-8f6997dea6da button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a8d9fbdd-c5ff-4f07-b275-8f6997dea6da');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# convert the embarked feature by creating a new numeric port feature.\n","\n","for dataset in titanic:\n","    dataset['Embarked'] = dataset['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\n","\n","train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"J-3eJqVxn54p","executionInfo":{"status":"ok","timestamp":1678103913242,"user_tz":-180,"elapsed":99,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"35757550-fff6-410e-ed65-fa1f1c7aa16e"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Survived  Pclass  Sex   Age  SibSp  Parch  Embarked\n","PassengerId                                                     \n","1                   0       3    0  22.0      1      0         0\n","2                   1       1    1  38.0      1      0         1\n","3                   1       3    1  26.0      0      0         0\n","4                   1       1    1  35.0      1      0         0\n","5                   0       3    0  35.0      0      0         0"],"text/html":["\n","  <div id=\"df-096439f0-0868-4f1c-8bf9-1115603992f9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Embarked</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-096439f0-0868-4f1c-8bf9-1115603992f9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-096439f0-0868-4f1c-8bf9-1115603992f9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-096439f0-0868-4f1c-8bf9-1115603992f9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["train_df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o8tLigNGhOfC","executionInfo":{"status":"ok","timestamp":1678103913244,"user_tz":-180,"elapsed":96,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"e3178a7f-aeb9-4a72-dfa7-16beb725420a"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Survived      0\n","Pclass        0\n","Sex           0\n","Age         177\n","SibSp         0\n","Parch         0\n","Embarked      0\n","dtype: int64"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["#histplot to\n","g = sns.FacetGrid(train_df, col='Survived')\n","g.map(plt.hist, 'Age', bins=20);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":225},"id":"hYTor4UbcwXf","executionInfo":{"status":"ok","timestamp":1678103916007,"user_tz":-180,"elapsed":2835,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"4fb60648-01f4-4196-80eb-53bf24b01f4f"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x216 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["g = sns.FacetGrid(train_df, col=\"Survived\", height=4.0, col_wrap=3)\n","g.map(sns.histplot, \"Embarked\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"MwDH4rlFfH3f","executionInfo":{"status":"ok","timestamp":1678103918044,"user_tz":-180,"elapsed":2044,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"8a551e57-52f1-44a8-8543-5197890c8974"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["g = sns.FacetGrid(train_df, col=\"Survived\", height=3.0, col_wrap=3)\n","g.map(sns.histplot, \"Pclass\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":225},"id":"oePg21DMgys4","executionInfo":{"status":"ok","timestamp":1678103918893,"user_tz":-180,"elapsed":858,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"7fde9e6b-241f-48f8-cbc4-6577a144ef00"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 648x216 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["g = sns.FacetGrid(train_df, col=\"Survived\", height=3.0, col_wrap=3)\n","g.map(sns.histplot, \"Parch\");"],"metadata":{"id":"l6TNpb78h0Td","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1678103920232,"user_tz":-180,"elapsed":1349,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"04ea9dee-4827-4132-b5e7-a7de27a20795"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 648x216 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAbgAAADQCAYAAAB1GnQwAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAST0lEQVR4nO3de7BdZX3G8e9Dwk1RbkYmTcKEFkaLtqJGy6W2CjoDSsVWQBgqyGCxrTo4tLXY/lE602nrTMdbW60U1EidEkQd4q1WuVjqBQ2KIGDbVMUkRBNSLtVabOKvf+x1mmOanLNzsvfZZ7/7+5nZc9Z617vW/i3g5dlr7bXXSlUhSVJr9ht1AZIkDYMBJ0lqkgEnSWqSASdJapIBJ0lqkgEnSWqSATeGkvxhknuS3JXkziS/MKDtvjTJFQPa1vcHsI0Dk6xJsj7J7UlWDqA0NW6CxscvJflKku1Jzh5EXa1ZPOoCtHeSnAScCTyrqh5L8iTggL1Yf3FVbd/dsqpaC6wdTKUDcQnwUFUdm+Q84M3AK0ZckxawCRsf3wFeBfzuiOtYsDyCGz9LgQer6jGAqnqwqh4ASPLtbkCTZFWSW7vpK5Ncm+RzwLVJvpjkaVMbTHJr1/9VSf4qyaFJ7k+yX7f88Uk2JNk/yc8k+YckdyS5LclTuz7HJPlCkruT/MmA9vUsYHU3fQNwWpIMaNtq08SMj6r6dlXdBfx4ENtrkQE3fv4RWJHkX5O8M8kv97ne8cALq+p8YA1wLkCSpcDSqlo31bGqHgHuBKa2fSbwqar6H+Aq4PVV9Wx6nxzf2fV5O/Cuqvo5YPOeiugG/Z27eb1wN92XARu6mrYDjwBH9rm/mkyTND40C09Rjpmq+n6SZwPPA14ArElyRVW9b5ZV11bVD7vp6+n9j+CP6A3kG3bTfw2904G3AOcB70xyCHAy8MFpB1IHdn9PAV7eTV9L73Ti7up/3ix1SnPm+NB0BtwYqqodwK3ArUnuBi4C3gdsZ+dR+UG7rPaDaetvSrItyc/TG6S/uZu3WQv8aZIjgGcDNwOPBx6uqhP2VNpstSe5DXjCbhb9blV9Zpe2TcAKYGOSxcChwLbZ3kOTbYLGh2bhKcoxk+QpSY6b1nQCcH83/W16gw12flrckzXAG4FDu/P4P6Gqvg98md6plY9V1Y6qehT4VpJzulqS5BndKp+j90kW4II9vWlVPa+qTtjNa3eDdy29/zkBnA3cXN4dXDOYsPGhWRhw4+cQYHWSe5PcRe+7gyu7ZX8MvD3JOmDHLNu5gd6Au36GPmuAX+/+TrkAuCTJ14B76F0IAnAZ8NruE/Oy/ndnRtcARyZZD1wODOQSbTVtYsZHkuck2QicA7w7yT2D2G5L4gdiSVKLPIKTJDXJgJMkNcmAkyQ1yYCTJDVprAPu9NNPL3q/LfHlq+XXnDg+fE3Ia4/GOuAefPDBUZcgLViOD026sQ44SZL2xICTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNan5gFu24miSzOm1bMXRoy5fkjRHzT/w9IGNG3jFuz8/p3XXvObkAVcjSZovzR/BSZImkwEnSWqSASdJapIBJ0lqkgEnSWqSASdJapIBJ0lqkgEnSWqSASdJatLQAy7JoiRfTfKxbv6YJLcnWZ9kTZIDuvYDu/n13fKVw65NktSu+TiCuwy4b9r8m4G3VtWxwEPAJV37JcBDXftbu36SJM3JUAMuyXLgJcDV3XyAU4Ebui6rgZd102d183TLT+v6S5K014Z9BPc24I3Aj7v5I4GHq2p7N78RWNZNLwM2AHTLH+n6/4QklyZZl2Td1q1bh1i6NH4cH9JOQwu4JGcCW6rqjkFut6quqqpVVbVqyZIlg9y0NPYcH9JOw3xczinAS5O8GDgIeCLwduCwJIu7o7TlwKau/yZgBbAxyWLgUGDbEOuTJDVsaEdwVfWmqlpeVSuB84Cbq+oC4Bbg7K7bRcCN3fTabp5u+c1VVcOqT5LUtlH8Du73gcuTrKf3Hds1Xfs1wJFd++XAFSOoTZLUiHl5ondV3Qrc2k1/E3jubvr8N3DOfNQjSWqfdzKRJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNcmAkyQ1yYCTJDXJgJMkNWloAZfkoCRfSvK1JPck+eOu/ZgktydZn2RNkgO69gO7+fXd8pXDqk2S1L5hHsE9BpxaVc8ATgBOT3Ii8GbgrVV1LPAQcEnX/xLgoa79rV0/SZLmZGgBVz3f72b3714FnArc0LWvBl7WTZ/VzdMtPy1JhlWfJKltQ/0OLsmiJHcCW4BPA/8OPFxV27suG4Fl3fQyYANAt/wR4MjdbPPSJOuSrNu6deswy5fGjuND2mmoAVdVO6rqBGA58FzgqQPY5lVVtaqqVi1ZsmRfNyc1xfEh7TQvV1FW1cPALcBJwGFJFneLlgObuulNwAqAbvmhwLb5qE+S1J5hXkW5JMlh3fTBwIuA++gF3dldt4uAG7vptd083fKbq6qGVZ8kqW2LZ+8yZ0uB1UkW0QvS66vqY0nuBa5L8ifAV4Fruv7XANcmWQ/8B3DeEGuTJDVuaAFXVXcBz9xN+zfpfR+3a/t/A+cMqx5J0mTxTiaSpCYZcJKkJhlwkqQm9RVwSU7pp02SpIWi3yO4v+yzTZKkBWHGqyiTnAScDCxJcvm0RU8EFg2zMEmS9sVsPxM4ADik6/eEae2PsvPH2pIkLTgzBlxVfRb4bJL3VdX981STJEn7rN8feh+Y5Cpg5fR1qurUYRQlSdK+6jfgPgj8DXA1sGN45UiSNBj9Btz2qnrXUCuRJGmA+v2ZwEeT/HaSpUmOmHoNtTJJkvZBv0dwU4+x+b1pbQX89GDLkSRpMPoKuKo6ZtiFSJI0SH0FXJILd9deVe8fbDmSJA1Gv6conzNt+iDgNOArgAEnjbEzzno5m7ds2+PypU8+kk/e+KF5rEganH5PUb5++nySw4DrhlGQpPmzecs2nnrxn+1x+Tfe+6Z5rEYarLk+LucHgN/LSZIWrH6/g/sovasmoXeT5Z8Frh9WUZIk7at+v4P7i2nT24H7q2rjEOqRJGkg+jpF2d10+Rv0nihwOPCjYRYlSdK+6veJ3ucCXwLOAc4Fbk/i43IkSQtWv6co/xB4TlVtAUiyBPgMcMOwCpMkaV/0exXlflPh1tk227pJViS5Jcm9Se5JclnXfkSSTyf5t+7v4V17krwjyfokdyV51pz2SJIk+g+4f0jyqSSvSvIq4OPAJ2ZZZzvwO1V1PHAi8NokxwNXADdV1XHATd08wBnAcd3rUsCnF0iS5mzGU5RJjgWOqqrfS/JrwC92i74AfGCmdatqM7C5m/7PJPcBy4CzgOd33VYDtwK/37W/v6oK+GKSw5Is7bYjSdJeme0I7m3AowBV9eGquryqLgc+0i3rS5KVwDOB2+kF5lRofRc4qpteBmyYttrGrm3XbV2aZF2SdVu3bu23BGkiOD6knWYLuKOq6u5dG7u2lf28QZJDgA8Bb6iqR3fZTrHzB+R9qaqrqmpVVa1asmTJ3qwqNc/xIe00W8AdNsOyg2fbeJL96YXbB6rqw13z95Is7ZYvBaYuXtkErJi2+vKuTZKkvTZbwK1L8hu7NiZ5NXDHTCsmCXANcF9VvWXaorXsfIDqRcCN09ov7K6mPBF4xO/fJElzNdvv4N4AfCTJBewMtFXAAcCvzrLuKcArgbuT3Nm1/QHw58D1SS4B7qf3w3HoXZX5YmA98F/AxX3vhSRJu5gx4Krqe8DJSV4APL1r/nhV3Tzbhqvqn4HsYfFpu+lfwGtn264kSf3o93lwtwC3DLkWSZIGZq7Pg5MkaUEz4CRJTTLgJElNMuAkSU0y4CRJTTLgJElNMuAkSU0y4CRJTTLgJElNMuAkSU0y4CRJTTLgJElNMuAkSU0y4CRJTTLgJElNMuAkSU0y4CRJTTLgJElNMuAkSU0y4CRJTTLgJElNMuAkSU0aWsAleU+SLUm+Pq3tiCSfTvJv3d/Du/YkeUeS9UnuSvKsYdUlSZoMwzyCex9w+i5tVwA3VdVxwE3dPMAZwHHd61LgXUOsS5I0AYYWcFX1T8B/7NJ8FrC6m14NvGxa+/ur54vAYUmWDqs2SVL75vs7uKOqanM3/V3gqG56GbBhWr+NXdv/k+TSJOuSrNu6devwKpXGkOND2mlkF5lUVQE1h/WuqqpVVbVqyZIlQ6hMGl+OD2mn+Q64702deuz+bunaNwErpvVb3rVJkjQn8x1wa4GLuumLgBuntV/YXU15IvDItFOZkiTttcXD2nCSvweeDzwpyUbgj4A/B65PcglwP3Bu1/0TwIuB9cB/ARcPqy5J0mQYWsBV1fl7WHTabvoW8Nph1SJJmjzeyUSS1CQDTpLUJANOktQkA06S1CQDTpLUpKFdRSlpsp1x1svZvGXbHpcvffKRfPLGD81jRZo0Bpykodi8ZRtPvfjP9rj8G+990zxWo0nkKUpJUpMMOElSkwy4mey3mCRzei1bcfSoq5ekieZ3cDP58XZe8e7Pz2nVNa85ecDFSJL2hkdwkqQmGXCSpCZ5inKBWrbiaB7YuGFO6/7U8hVs2vCdAVckjZeZfofnb/AmgwG3QD2wcYPf/0n7YKbf4fkbvMngKUpJUpMMOElSkww4SVKTDDhJUpMMOElSkww4SVKTDDhJUpMMOElSkxZUwCU5Pcm/JFmf5IpR1yNJGl8LJuCSLAL+GjgDOB44P8nxo61KkjSuFtKtup4LrK+qbwIkuQ44C7h3pFVNmH25Bybs230wR3n/zX1570X7H8iO/3lszu/tvUPHz0z3uYTxvtdlS/uWqhp1DQAkORs4vape3c2/EviFqnrdLv0uBS7tZp8C/Mssm34S8OCAy11I3L/xN9s+PlhVp/ezIcfH/9P6/kH7+zjn8bGQjuD6UlVXAVf12z/JuqpaNcSSRsr9G3+D3EfHx09qff+g/X3cl/1bMN/BAZuAFdPml3dtkiTttYUUcF8GjktyTJIDgPOAtSOuSZI0phbMKcqq2p7kdcCngEXAe6rqngFsuu/TNWPK/Rt/o9zH1v/5tr5/0P4+znn/FsxFJpIkDdJCOkUpSdLAGHCSpCY1G3At3/YryYoktyS5N8k9SS4bdU3DkmRRkq8m+dioaxm0JIcluSHJN5Lcl+SkeXzvZscHTM4YcXzMso0Wv4Prbvv1r8CLgI30rtA8v6qauCtKkqXA0qr6SpInAHcAL2tl/6ZLcjmwCnhiVZ056noGKclq4Laqurq7cvhxVfXwPLxv0+MDJmeMOD5m1uoR3P/d9quqfgRM3farCVW1uaq+0k3/J3AfsGy0VQ1ekuXAS4CrR13LoCU5FPgl4BqAqvrRfIRbp+nxAZMxRhwfs2s14JYB028suJHG/uOekmQl8Ezg9hGXMgxvA94I/HjEdQzDMcBW4L3dKaarkzx+nt57YsYHND1G3objY0atBtxESHII8CHgDVX16KjrGaQkZwJbquqOUdcyJIuBZwHvqqpnAj8AmvsubNRaHSOOj/60GnDN3/Yryf70Bu4HqurDo65nCE4BXprk2/ROoZ2a5O9GW9JAbQQ2VtXUUcUN9Ab0fGh+fEDzY8Tx0YdWA67p234lCb1z0/dV1VtGXc8wVNWbqmp5Va2k9+/v5qr69RGXNTBV9V1gQ5KndE2nMX+Phmp6fED7Y8Tx0Z8Fc6uuQRribb8WilOAVwJ3J7mza/uDqvrE6ErSHLwe+EAXMt8ELp6PN52A8QGOkRbs8/ho8mcCkiS1eopSkjThDDhJUpMMOElSkww4SVKTDDhJUpMMuAmWZEeSO5N8PckHkzxuH7e3MsnXB1WfNGqOkfFmwE22H1bVCVX1dOBHwG/2s1KSJn8/Ke2GY2SMGXCachtwbJJfSXJ7d4PTzyQ5CiDJlUmuTfI54NokRyX5SJKvda+Tu+0sSvK33TO4/jHJwSPbI2mwHCNjxoDT1KfNM4C7gX8GTuxucHodvbuVTzkeeGFVnQ+8A/hsVT2D3j3ipu6EcRzw11X1NOBh4OXzshPSEDlGxpOH0ZPt4Gm3MbqN3r37ngKs6R4YeQDwrWn911bVD7vpU4ELAapqB/BIksOBb1XV1DbvAFYOcwekIXOMjDEDbrL9sKpOmN6Q5C+Bt1TV2iTPB66ctvgHfWzzsWnTOwBPv2icOUbGmKcotatD2fnolItm6HcT8FsASRZ1T+CVJoFjZEwYcNrVlcAHk9wBPDhDv8uAFyS5m95pluPnoTZpIbgSx8hY8GkCkqQmeQQnSWqSASdJapIBJ0lqkgEnSWqSASdJapIBJ0lqkgEnSWrS/wI3XEWncUxQrAAAAABJRU5ErkJggg==\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["g = sns.FacetGrid(train_df, col=\"Survived\", height=3.0, col_wrap=3)\n","g.map(sns.histplot, \"SibSp\");"],"metadata":{"id":"8RTXS01NSmVY","colab":{"base_uri":"https://localhost:8080/","height":225},"executionInfo":{"status":"ok","timestamp":1678103921907,"user_tz":-180,"elapsed":1682,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"05c09f32-838d-4469-b4a0-daae7a3b7945"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 648x216 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Split"],"metadata":{"id":"LJnYu2QNJor3"}},{"cell_type":"code","source":["#create target feature\n","\n","target = \"Survived\"\n","X = train_df.drop(columns=target)\n","y = train_df[target]\n","\n","print(\"X shape:\", X.shape)\n","print(\"y shape:\", y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6l4FWOGgJnWH","executionInfo":{"status":"ok","timestamp":1678103921910,"user_tz":-180,"elapsed":89,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"2c529374-4129-43a9-af42-81104f47500c"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["X shape: (891, 6)\n","y shape: (891,)\n"]}]},{"cell_type":"code","source":["#split into train_test\n","\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X, y, test_size=0.2, random_state=42)\n","\n","print(\"X_train shape:\", X_train.shape)\n","print(\"y_train shape:\", y_train.shape)\n","print(\"X_test shape:\", X_test.shape)\n","print(\"y_test shape:\", y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XKqRQ9OqKaPW","executionInfo":{"status":"ok","timestamp":1678103921911,"user_tz":-180,"elapsed":84,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"5c32aadc-633f-4308-bfbc-d0e9436d7d78"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape: (712, 6)\n","y_train shape: (712,)\n","X_test shape: (179, 6)\n","y_test shape: (179,)\n"]}]},{"cell_type":"markdown","source":["Build model\n","\n","Baseline"],"metadata":{"id":"Math-_i4Kq1T"}},{"cell_type":"code","source":["#Calculate the baseline accuracy score\n","\n","acc_baseline = y_train.value_counts(normalize=True).max()\n","print(\"Baseline Accuracy:\", round(acc_baseline, 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T58uyNYvKvm5","executionInfo":{"status":"ok","timestamp":1678103921913,"user_tz":-180,"elapsed":78,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"e73f376b-0dcb-45ec-901d-85ce03b5d317"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Baseline Accuracy: 0.6236\n"]}]},{"cell_type":"markdown","source":["Model 1 : Logostic Regression"],"metadata":{"id":"jJVnpewEhYCr"}},{"cell_type":"code","source":["#build logistic regression model\n","\n","model_lr = model_lr = make_pipeline(\n","    OneHotEncoder(handle_unknown='ignore'),\n","    LogisticRegression(max_iter=1000)\n",")\n","# Fit model to training data\n","model_lr.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"HNY0l5XSMYHo","executionInfo":{"status":"ok","timestamp":1678103921916,"user_tz":-180,"elapsed":72,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"69b3e0dc-f369-4cc4-957f-eb88860cf1b7"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('onehotencoder', OneHotEncoder(handle_unknown='ignore')),\n","                ('logisticregression', LogisticRegression(max_iter=1000))])"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;onehotencoder&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)),\n","                (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=1000))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;onehotencoder&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)),\n","                (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=1000))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(max_iter=1000)</pre></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["\n","#Calculate the accuracy score\n","\n","acc_train = accuracy_score(y_train, model_lr.predict(X_train))\n","acc_test = model_lr.score(X_test, y_test)\n","\n","print(\"Training Accuracy:\", round(acc_train, 2))\n","print(\"Test Accuracy:\", round(acc_test, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"peVL5CJMOkAG","executionInfo":{"status":"ok","timestamp":1678103921917,"user_tz":-180,"elapsed":68,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"fe6b8ede-d742-4358-b34e-c11666ec153d"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy: 0.83\n","Test Accuracy: 0.79\n"]}]},{"cell_type":"code","source":["#make predictions\n","y_pred = model_lr.predict(X_test)\n","log_reg_acc = round(model_lr.score(X_train, y_train) * 100, 2)\n","\n","log_reg_acc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5NvkxgSprMKR","executionInfo":{"status":"ok","timestamp":1678103921919,"user_tz":-180,"elapsed":62,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"d5a28044-ffb7-4e6a-eb1b-bf294d92d833"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["82.72"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["- Our logistic regression model beat the baseline"],"metadata":{"id":"gKtCf9oXMqiS"}},{"cell_type":"markdown","source":["Model 2 : Decision Trees"],"metadata":{"id":"MIkTmxn6hhxM"}},{"cell_type":"code","source":["# fit model\n","\n","model_dt = make_pipeline(\n","    SimpleImputer(strategy=\"median\"),DecisionTreeClassifier(random_state=42)\n",")\n","model_dt.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"tSrtgx43hqyO","executionInfo":{"status":"ok","timestamp":1678103921921,"user_tz":-180,"elapsed":56,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"ffbe332e-0ec4-4ce6-de30-d671fadd1603"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('simpleimputer', SimpleImputer(strategy='median')),\n","                ('decisiontreeclassifier',\n","                 DecisionTreeClassifier(random_state=42))])"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer(strategy=&#x27;median&#x27;)),\n","                (&#x27;decisiontreeclassifier&#x27;,\n","                 DecisionTreeClassifier(random_state=42))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer(strategy=&#x27;median&#x27;)),\n","                (&#x27;decisiontreeclassifier&#x27;,\n","                 DecisionTreeClassifier(random_state=42))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=42)</pre></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["Evaluate model"],"metadata":{"id":"Ut9c0YPQuRCf"}},{"cell_type":"code","source":["\n","#Calculate the accuracy score\n","\n","acc_train = accuracy_score(y_train, model_dt.predict(X_train))\n","acc_test = model_dt.score(X_test, y_test)\n","\n","print(\"Training Accuracy:\", round(acc_train, 2))\n","print(\"Test Accuracy:\", round(acc_test, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZCCLKJK6pTmj","executionInfo":{"status":"ok","timestamp":1678103921922,"user_tz":-180,"elapsed":54,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"a55e9845-ff75-484b-ccdc-3164443114d5"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy: 0.94\n","Test Accuracy: 0.77\n"]}]},{"cell_type":"code","source":["#make predictions\n","y_pred = model_dt.predict(X_test)\n","decision_tree_acc = round(model_dt.score(X_train, y_train) * 100, 2)\n","\n","decision_tree_acc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4U8wBmPsqEqu","executionInfo":{"status":"ok","timestamp":1678103922515,"user_tz":-180,"elapsed":20,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"5b960a83-addf-49b3-c4e2-ffe4f7963e79"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["93.68"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["The Decision Tree model perfomed better than the logistic regression model."],"metadata":{"id":"MzXtqcQqphLZ"}},{"cell_type":"markdown","source":["Model 3 : Random Forest"],"metadata":{"id":"8xQA3uRBr-sZ"}},{"cell_type":"code","source":["# create a classifier pipeline\n","\n","clf = make_pipeline(SimpleImputer(), RandomForestClassifier(random_state=42))\n","print(clf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZLGR7kyvsCK5","executionInfo":{"status":"ok","timestamp":1678103922516,"user_tz":-180,"elapsed":18,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"8a181361-6957-45af-c59b-7f75c53c1812"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Pipeline(steps=[('simpleimputer', SimpleImputer()),\n","                ('randomforestclassifier',\n","                 RandomForestClassifier(random_state=42))])\n"]}]},{"cell_type":"code","source":["# perform cross validation\n","\n","cv_acc_scores = cross_val_score(clf, X_train, y_train, cv=5, n_jobs=-1)# -1 means give me as many resources as you can\n","print(cv_acc_scores)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vUmEPrhVsbkn","executionInfo":{"status":"ok","timestamp":1678103927868,"user_tz":-180,"elapsed":5362,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"a9c444ec-6922-4b17-9e18-077c1e40db85"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.82517483 0.79020979 0.78873239 0.79577465 0.79577465]\n"]}]},{"cell_type":"code","source":["#Create a dictionary with the range of hyperparameters that we want to evaluate for our classifier.\n","\n","params ={\n","    \"simpleimputer__strategy\":[\"mean\", \"median\"],\n","    \"randomforestclassifier__n_estimators\": range(25, 100, 25),\n","    \"randomforestclassifier__max_depth\": range(10, 50, 10)\n","}\n","params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"shOJ4FJHsl9J","executionInfo":{"status":"ok","timestamp":1678103927872,"user_tz":-180,"elapsed":38,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"4a927f72-21b9-45d3-bde9-fd3ce31007ff"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'simpleimputer__strategy': ['mean', 'median'],\n"," 'randomforestclassifier__n_estimators': range(25, 100, 25),\n"," 'randomforestclassifier__max_depth': range(10, 50, 10)}"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["#Create a GridSearchCV named model that includes your classifier and hyperparameter grid.\n","model_rf = GridSearchCV(\n","    clf,\n","    param_grid=params,\n","    cv=5,\n","    n_jobs=-1,\n","    verbose=1\n",")\n","model_rf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":151},"id":"ZpnQl8VctRRN","executionInfo":{"status":"ok","timestamp":1678103927874,"user_tz":-180,"elapsed":35,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"c8305cb3-556e-46cc-95a1-25f1585d1791"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[('simpleimputer', SimpleImputer()),\n","                                       ('randomforestclassifier',\n","                                        RandomForestClassifier(random_state=42))]),\n","             n_jobs=-1,\n","             param_grid={'randomforestclassifier__max_depth': range(10, 50, 10),\n","                         'randomforestclassifier__n_estimators': range(25, 100, 25),\n","                         'simpleimputer__strategy': ['mean', 'median']},\n","             verbose=1)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer()),\n","                                       (&#x27;randomforestclassifier&#x27;,\n","                                        RandomForestClassifier(random_state=42))]),\n","             n_jobs=-1,\n","             param_grid={&#x27;randomforestclassifier__max_depth&#x27;: range(10, 50, 10),\n","                         &#x27;randomforestclassifier__n_estimators&#x27;: range(25, 100, 25),\n","                         &#x27;simpleimputer__strategy&#x27;: [&#x27;mean&#x27;, &#x27;median&#x27;]},\n","             verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer()),\n","                                       (&#x27;randomforestclassifier&#x27;,\n","                                        RandomForestClassifier(random_state=42))]),\n","             n_jobs=-1,\n","             param_grid={&#x27;randomforestclassifier__max_depth&#x27;: range(10, 50, 10),\n","                         &#x27;randomforestclassifier__n_estimators&#x27;: range(25, 100, 25),\n","                         &#x27;simpleimputer__strategy&#x27;: [&#x27;mean&#x27;, &#x27;median&#x27;]},\n","             verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer()),\n","                (&#x27;randomforestclassifier&#x27;,\n","                 RandomForestClassifier(random_state=42))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["# fit model\n","model_rf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":168},"id":"kuWeB0yfsuxy","executionInfo":{"status":"ok","timestamp":1678103953459,"user_tz":-180,"elapsed":25616,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"eb5bab6a-6534-422a-8780-f54cef753cf6"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 24 candidates, totalling 120 fits\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[('simpleimputer', SimpleImputer()),\n","                                       ('randomforestclassifier',\n","                                        RandomForestClassifier(random_state=42))]),\n","             n_jobs=-1,\n","             param_grid={'randomforestclassifier__max_depth': range(10, 50, 10),\n","                         'randomforestclassifier__n_estimators': range(25, 100, 25),\n","                         'simpleimputer__strategy': ['mean', 'median']},\n","             verbose=1)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer()),\n","                                       (&#x27;randomforestclassifier&#x27;,\n","                                        RandomForestClassifier(random_state=42))]),\n","             n_jobs=-1,\n","             param_grid={&#x27;randomforestclassifier__max_depth&#x27;: range(10, 50, 10),\n","                         &#x27;randomforestclassifier__n_estimators&#x27;: range(25, 100, 25),\n","                         &#x27;simpleimputer__strategy&#x27;: [&#x27;mean&#x27;, &#x27;median&#x27;]},\n","             verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer()),\n","                                       (&#x27;randomforestclassifier&#x27;,\n","                                        RandomForestClassifier(random_state=42))]),\n","             n_jobs=-1,\n","             param_grid={&#x27;randomforestclassifier__max_depth&#x27;: range(10, 50, 10),\n","                         &#x27;randomforestclassifier__n_estimators&#x27;: range(25, 100, 25),\n","                         &#x27;simpleimputer__strategy&#x27;: [&#x27;mean&#x27;, &#x27;median&#x27;]},\n","             verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;simpleimputer&#x27;, SimpleImputer()),\n","                (&#x27;randomforestclassifier&#x27;,\n","                 RandomForestClassifier(random_state=42))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["Evaluate model"],"metadata":{"id":"r6iWWdaEuiLa"}},{"cell_type":"code","source":["#Calculate the accuracy score\n","\n","acc_train = accuracy_score(y_train, model_rf.predict(X_train))\n","acc_test = model_rf.score(X_test, y_test)\n","\n","print(\"Training Accuracy:\", round(acc_train, 2))\n","print(\"Test Accuracy:\", round(acc_test, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wnAZgTUKuevn","executionInfo":{"status":"ok","timestamp":1678103953461,"user_tz":-180,"elapsed":43,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"fd500cc5-4338-4332-a0c4-e4ff73898553"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy: 0.92\n","Test Accuracy: 0.82\n"]}]},{"cell_type":"code","source":["#make predictions\n","y_pred_rf = model_rf.predict(X_test)\n","random_forest_acc = round(model_rf.score(X_train, y_train) * 100, 2)\n","\n","random_forest_acc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VYoftTYUt9Bc","executionInfo":{"status":"ok","timestamp":1678103953463,"user_tz":-180,"elapsed":39,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"1d373f94-ca0e-4d11-cfe6-774cd5aae162"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["91.85"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["Model Evaluation"],"metadata":{"id":"Ed86GqG3vMMZ"}},{"cell_type":"code","source":["models = pd.DataFrame({\n","    'Model': ['Logistic Regression', 'Decision Tree','Random Forest'],           \n","    'Score': [log_reg_acc, decision_tree_acc, random_forest_acc]})\n","\n","models.sort_values(by='Score', ascending=False)\n","     "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"TTpAs_z7xJRQ","executionInfo":{"status":"ok","timestamp":1678104378903,"user_tz":-180,"elapsed":374,"user":{"displayName":"sharon wariara","userId":"06618761036184306104"}},"outputId":"b0f6e304-467b-4010-e2b1-3b179b814696"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Model  Score\n","1        Decision Tree  93.68\n","2        Random Forest  91.85\n","0  Logistic Regression  82.72"],"text/html":["\n","  <div id=\"df-f2888837-c8fb-4849-a42c-5b5d977fe601\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Decision Tree</td>\n","      <td>93.68</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Random Forest</td>\n","      <td>91.85</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Logistic Regression</td>\n","      <td>82.72</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2888837-c8fb-4849-a42c-5b5d977fe601')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f2888837-c8fb-4849-a42c-5b5d977fe601 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f2888837-c8fb-4849-a42c-5b5d977fe601');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["The best performing model was the decision tree with an accuracy score of 93.68 %, followed by the Random Forest(81.85 %) and lastly the Logistic Regression model (82.72%)"],"metadata":{"id":"U6kXZdbTyt-e"}}]}